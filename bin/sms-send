#!/usr/bin/env ruby
#
#  Created on 2008-9-25.
#  Copyright (c) 2008. All rights reserved.

begin
  require 'rubygems'
rescue LoadError
  # no rubygems to load, so we fail silently
end

require 'smsinabox'
require 'optparse'

OPTIONS = {
  :recipient => nil,
  :message => nil,
  :pipe => false,
  :config => nil
}
MANDATORY_OPTIONS = %w( recipient )

parser = OptionParser.new do |opts|
  opts.banner = <<BANNER
Send a single SMS message to the specified recipient

Usage: #{File.basename($0)} [options]

Options are:
BANNER
  opts.separator ""
  opts.on("-r", "--recipient=RECIPIENT", String,
          "The recipient of the SMS") { |r| OPTIONS[:recipient] = r }
  opts.on("-m", "--message=MESSAGE", String,
          "The body of the message (wrap in quotes)") { |m| OPTIONS[:message] = m }
  opts.on("-c", "--config=path/to/config", String,
          "Path to alternate config file (defaults to ~/.smsinabox)") { |m| OPTIONS[:config] = m }
  opts.on("-p", "--pipe",
          "Read message text from STDIN") { OPTIONS[:pipe] = true }
  opts.on("-h", "--help",
          "Show this help message.") { puts opts; exit }
  opts.parse!(ARGV)

  if MANDATORY_OPTIONS && MANDATORY_OPTIONS.find { |option| OPTIONS[option.to_sym].nil? }
    puts opts; exit 1
  end

  if OPTIONS[:message].nil? && !OPTIONS[:pipe]
    puts opts; exit 1
  end
end

# Figure out our message
message = if !OPTIONS[:message].nil?
  OPTIONS[:message]
else
  require 'fcntl'
  if STDIN.fcntl(Fcntl::F_GETFL, 0) == 0
    STDIN.read
  else
    puts "Nothing to read from STDIN!"
    exit 1
  end
end

Smsinabox.configure!( OPTIONS[:config] )
report = Smsinabox.deliver(
  Smsinabox::Message.new( 
    :recipient => OPTIONS[:recipient], :body => message
  )
)

puts "Message sent"
puts "Reference: #{report.inspect}"
puts "Recipient: #{OPTIONS[:recipient]}"
puts "Message:   #{message}"
